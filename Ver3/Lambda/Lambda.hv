BoxLambda := class extend BoxFuncBody
{
}

BoxLambdaHolder := class extend BoxExeObj
{
	tmpl := BoxFuncTemplateBody^
	resToken := TokenIndent
	this := !(Token^ brackets, Token^ body,Token^ typeToken,Token^ capturesToken) -> void
	{
		bPtr := Token^

		if brackets.Down?.GetValue() == "()"
		{
			bPtr = brackets.Down
		}else{
			assert(false)
		}

		if typeToken == null
		{
			resToken.Value = StringSpan("void") //TODO: auto detect return type
			typeToken = resToken&
		}

		attr := FuncAttributes
		attr.IsLambda = true
		
		tmpl = new BoxFuncTemplateBody(attr,bPtr,null,null,typeToken,body)

		ObjType = GTypeBool //TODO : to type none
	}
	IsOneFunc := !() -> bool
	{
		return tmpl.IsOneFunc()
	}
	GetOneFunc := !() -> BoxFunc^
	{
		return tmpl.GetOneFunc()
	}
}
