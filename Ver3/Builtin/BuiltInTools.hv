BuiltInAssert := class extend BoxFuncCommon
{
	trueLabel := BoxLabel^
	falseLabel := BoxLabel^
	this := !() -> void
	{
		SetType(GetFuncType(![GTypeBool],GTypeVoid))
	}
	PrintFuncCall := virtual !(TIOStream^ f,int resId,int debId,ExeDownList lst) -> void
	{
		if not DebugMode
			return void

		trueLabel = new BoxLabel()
		falseLabel = new BoxLabel()

		lst[0].PrintPre(f)
		
		PrintBranch(f,lst[0],trueLabel,falseLabel)
		
		falseLabel.PrintCode(f)
		f^ << "call void @llvm.debugtrap()"
		if DebugMode
			f^ << " , !dbg !" << GDebugLineCallId
		f^ << "\n"
		trueLabel.PrintCode(f)
	}
}
BuiltInLongJump := class extend BoxFuncCommon
{
	this := !() -> void
	{
		SetType(GetFuncType(![GTypeVoidP],GTypeVoid))
	}
	PrintFuncCall := virtual !(TIOStream^ f,int resId,int debId,ExeDownList lst) -> void
	{
		lst[^].PrintPre(f)
		
		f^ << "call void @llvm.eh.sjlj.longjmp(i8* "
		lst[0].PrintUse(f)
		f^ << ")"
		if DebugMode
			f^ << " , !dbg !" << GDebugLineCallId
		f^ << "\n"
	}
}

CreateBuildInTools := !() -> void
{
	bSpace := CodeSpaces[-1]&
	bSpace.Functions[StringSpan("assert")].Push(new BuiltInAssert() )
	bSpace.Functions[StringSpan("llvmLongJump")].Push(new BuiltInLongJump() )
}
