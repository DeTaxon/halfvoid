ParseType := !(Token^ obj) -> Type^
{
	if obj == null
		return null
	if obj is TokenIndent
	{
		asIndent := obj->{TokenIndent^}
		name := asIndent.Value

		for defs : DefsTable
		{
			if defs == null
				break
			if defs.ItName == asIndent.Value
				return defs.ItType
		}
		for spc : CodeSpaces
		{
			if spc.Globals.Contain(name)
			{
				for glb : spc.Globals[name]
				{
					if glb is TypeVar
					{
						return glb->{TypeVar^}.Value
					}
				}
			}
		}
	}
	if obj.GetValue() == "~d"
	{
		if obj.Down.Right?.GetValue() == "^"
		{
			dTyp := ParseType(obj.Down)
			if dTyp != null
				return dTyp.GetPoint()
		}
	}

	return null
}
