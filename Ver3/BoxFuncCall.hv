globalIdIter := 0
GetNewId := !() -> int
{
	globalIdIter += 1
	return globalIdIter
}

BoxFuncCall := class extend BoxExeObj
{
	callObj := BoxFunc^
	downs := ExeDownList
	resId := int
	this := !(BoxFunc^ fnc, CheckExeDownList objs) -> void
	{
		callObj = fnc
		downs.Push(objs[^])
		resId = GetNewId()
	}
	GetType := virtual !() -> Type^
	{
		return callObj.GetType().ResultType
	}

	IsMem := virtual !() -> bool
	{
		return callObj.GetType().ResultRef
	}
	PrintFuncUse := !(TIOStream^ f) -> void
	{
		callObj.PrintFuncCall(f,resId,0,downs)
	}
	PrintPre := virtual !(TIOStream^ f) -> void
	{
		PrintFuncUse(f)
	}
	PrintUse := virtual !(TIOStream^ f) -> void
	{
		f^ << "%T" << resId
	}
}
