TryGetMetaCall := !(Token^ obj) -> BoxExeObj^
{
	if obj.Down?.Right.GetValue() == "->" //todo add to compiler comething thats make it simple
	{
	}else{
		return null
	}
	
	right := obj.Down.Right.Right->{TokenIndent^}

	if right.Value == "VTable"
	{
		typ := ParseType(obj.Down)
		if typ != null
		{
			if not (typ is TypeClass)
				assert(false) //TODO
			cls := typ->{TypeClass^}.ToClass
			cls.AwaitVTableStep()
			if cls.VTable.Size() == 0
				assert(false) //TODO
			emptyObj := CheckExeDownList
			return new BoxFuncCall(cls.VTableValue.Value,emptyObj)
		}
		
	}
	
	assert(false)
	return null
}
