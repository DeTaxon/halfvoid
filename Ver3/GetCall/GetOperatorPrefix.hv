TryGetPrefixOperator := !(Token^ itm) -> BoxExeObj^
{
	if itm.Down?.GetValue() == "return" or  itm.Down?.GetValue() == "yield"
	{
		isYield := false
		if itm.Down.GetValue() == "yield"
			isYield = true

		fnc := GetCurrentFunc()
		fType := fnc.GetType()->{TypeFunc^}

		resultCall := BoxExeObj^

		rRef := CurrentFunc.GetType()->{TypeFunc^}.ResultRef

		if itm.Down.Right is TokenIndent and itm.Down.Right->{TokenIndent^}.Value == "void"
		{
		}else{
			dwnRes := TryGetExeCall(itm.Down.Right)
			assert(dwnRes != null)
			if dwnRes.GetType() == GTypeVoid //TODO Auto return type
			{
				resultCall = dwnRes
				assert(resultCall != null)
			}else{
				tkn1 := TokenIndent(StringSpan("result"))
				tkn2 := TokenSymbol(StringSpan("="),0)
				tknAll := TokenData

				tknAll.Down = tkn1&
				tkn1.Right = tkn2&
				tkn2.Right = itm.Down.Right

				resultCall = TryGetExeCall(tknAll&)

				assert(resultCall != null)
			}
		}

		if isYield
		{
			return new BoxYield(fnc.GetExitLabel(),resultCall)
		}

		return new BoxReturn(fnc.GetExitLabel(),resultCall)
	}
	return null
}
