NkButton := class extend GUIObject
{
	pressCallback := !()&-> void

	itText := TextLabel
	textOffset := vec2f

	this := !(SimpleWindow^ nkCtx,float x, float y,StringView setLabel,Font^ setFont) -> void
	{
		SetSize("static",x,"static",y)

		assert(setFont != null)
		itText."this"(setFont,setLabel)
	}
	SetLayout := virtual !(VkOverlayContext^ ctx,vec2f setSize) -> void
	{
		super(ctx,setSize)
	}
	SetColor := !(ButtonColorLayer layer, int r, int g, int b, int alpha = 255) -> void
	{
		//TODO
	}
	SetPressCallback := !(!()&->void cb) -> void
	{
		pressCallback = cb.Capture()
	}
	MousePressed := virtual !(int buttonNum, bool pressed,vec2f offset) -> void
	{
		pressCallback?()
	}
	GetLayout := virtual !(VkOverlayContext^ ctx) -> Tuple.{vec2f,int,int}
	{
		result = super(ctx)
		itText.GetLayout(ctx)
	}
	SetLayout := virtual !(VkOverlayContext^ ctx,vec2f setSize) -> void
	{
		super(ctx,setSize)
		textOffset.x = (setSize.x - itText.textSize.x)*0.5
		textOffset.y = (setSize.y + itText.itFont.height)*0.5
	}
	PushDraw := virtual !(VkOverlayContext^ ctx,VkCommandBuffer cmdB,vec2f offset) -> void
	{
		itText.PushDraw(ctx,cmdB,offset + textOffset)
	}
}

ButtonColorLayer := enum
{
	"normal",
	"hover",
	"pressed"
}
