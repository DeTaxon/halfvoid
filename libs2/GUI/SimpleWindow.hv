SimpleWindow := class extend VulkanDefaultInstance
{

	itWin := GLFWWindow^
	nuklearContext := NuklearGoAroundContext^

	mainRenderPass := TRenderPass^

	this := !(int w, int h,char^ title) -> void
	{

		PreferSimpleGPU()
		
		itWin = new GLFWWindow
		itWin.Init(w,h,title)
		Init()

		initCreateStageMemory()

		nuklearContext = new NuklearGoAroundContext
		nuklearContext.Init(this&)

		CreateSurface(itWin.windowHandle)

		mainRenderPass = nuklearContext.CreateRenderPass(SwapImageFormat)

		CreateSwapchain(mainRenderPass,w,h)

		nuklearContext.CreateShader(mainRenderPass)

		InitWindow(nuklearContext)

		waitEndFence
	}

	waitEndFence := VkFence
	Run := !() -> void
	{
		step1Cmd := TVkCommandBuffer(this&,itDrawCommandPool)

		while not itWin.ShouldClose()
		{
			surfaceIndex := u32
			drawRes := true
			DrawGetImage(surfaceIndex&,drawRes&)

			step1Cmd.Reset()
			step1Cmd.Start()
			
			StartTextDraw(step1Cmd.Get(),GetSurfaceFramebuffer(surfaceIndex))

			nuklearContext.InputCheck(itWin)
			nuklearContext.MakeDraw()
			nuklearContext.RenderStep()
			nuklearContext.Clear()

			nuklearContext.Draw(step1Cmd.Get(),GetSurfaceWidth(),GetSurfaceHeight())

			StopTextDraw(step1Cmd.Get())

			step1Cmd.Stop()

			step1Cmd.Submit(DrawQueue,null)

			DrawPresentImage(surfaceIndex)

			//hm := u64 //TODO
			//hm = not_b hm
			//Funcs.vkWaitForFences(LogicalDevice,1,itGlobFence&,0,hm)

			itWin.PollEvents()
			itWin.SwapBuffers()
		}
	}

	StartTextDraw := !(VkCommandBuffer cmd,VkFramebuffer frm ) -> void
	{
		imgBarCPre := VkImageMemoryBarrier[2]
	
		beginInfo := VkRenderPassBeginInfo()
	
		clrValues := float[13]
	
		clrValues[0] = 0.0
		clrValues[1] = 0.5
		clrValues[2] = 1.0
		clrValues[4] = 1.0f
		clrValues[5] = 0.0f
		clrValues[6] = 0.0f
		clrValues[7] = 1.0f
	
		clrValues[8] = 0.0f
		clrValues[9] = 1.0f
		clrValues[10] = 0.0f
		clrValues[11] = 0.0f
	
		beginInfo.renderPass = mainRenderPass.Get()
		beginInfo.framebuffer = frm
		beginInfo.renderArea.extent.width = GetSurfaceWidth() //surfAb.currentExtent.width
		beginInfo.renderArea.extent.height = GetSurfaceHeight() //surfAb.currentExtent.height
		beginInfo.clearValueCount = 1
		beginInfo.pClearValues&->{void^^}^ = clrValues[0]&->{void^}
		
		Funcs.vkCmdBeginRenderPass(cmd,beginInfo&,VK_SUBPASS_CONTENTS_INLINE) //TODO remove vk.Funcs
	}
	StopTextDraw := !(VkCommandBuffer cmd) -> bool
	{
		Funcs.vkCmdEndRenderPass(cmd) //TODO remove vk.Funcs
	}

	InitWindow := virtual !(void^ nk) -> void
	{
	}
	DrawCode := virtual !(void^ nk,int w, int h) -> void
	{
	}
}

NuklearGoAroundContext := class extend NuklearVulkanContext
{
	DrawCode := virtual !(void^ nk) -> void
	{
		wn := vInstance->{SimpleWindow^}
		wn.DrawCode(nk,wn.GetSurfaceWidth(),wn.GetSurfaceHeight())
	}
}
