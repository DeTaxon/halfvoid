
internalHVInitClass := !(@T x)  -> void
{
	if x->VTable != none
		x->VTable = T->VTable
	if T->TypeGroup == "Class"
	{
		for fld : x->AllFields
		{
			if fld->TypeGroup == "Class"
			{
				internalHVInitClass(fld)
			}
		}
	}
}

internalHVVirtualMethodCall := !(@T this, args...) . {@FieldNumber} -> void // return type ignored and replaced by compiler with T->Result
{
	assert(this->VTable != null)
	return this->VTable.FieldNumber(this,args...)
}


ZeroMem := !(@T& x) -> void
{
	memset(x&,0,T->TypeSize)
	if T->TypeGroup == "Class"
		internalHVInitClass(x)
}
