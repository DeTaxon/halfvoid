
TaskWorkersToDo := List.{Task^}

"@work call" := !(!()&->@T lmbd ) -> T
{
	l2 := lmbd
	newTask := spawnWorkInner(() ==> {
		l2()
	})
	newTask.finishedWork.Await()
}

SpawnWork := !(!()&->void lmbd) -> Task^
{
	return spawnWorkInner(lmbd.Capture())
}

spawnWorkInner := !(!()&->void lmbd) -> Task^
{
	newTask := new Task(lmbd)
	TaskCheckMutex.Lock() //TODO optimize
	TaskWorkersToDo.Push(newTask)
	TaskWaitTasksConVar.NotifyAll()
	TaskCheckMutex.Unlock()
	ExpectWorkers(1)

	return newTask
}


ExpectWorkers := !(int x) -> void
{
	diff := x - TaskAdditionalWorkers.Size()

	if x <= 0
		return void
	for i : diff
	{
		newWorker := new TaskWorkerCreated()
		newWorker.CreateThread()
		TaskAdditionalWorkers.Push(newWorker)
	}
}
