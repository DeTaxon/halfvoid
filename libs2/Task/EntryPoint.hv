internalHVEntryPoint := !(int argc,char^^ argv) -> int
{ 
	//All function expects to CurrentTask be initialized, this is not working for first function
	//so first function MUST initialize CurrentTask
	internalInitThread()

	result = internalHVEntryPoint2(argc,argv)
	
	CurrentThread.ThreadMainTask = null
	CurrentTask = null
	internalThreadDestructor()
}

internalInitThread := !() -> void
{
	voidVal := calloc(1,Task->TypeSize)
	internalHVInitClass(voidVal->{Task^}^)
	CurrentTask = voidVal->{Task^}
}
internalThreadDestructor := !() -> void
{
	CurrentTask = null
}


TSpawnTask := !(!()&-> void cb) -> void
{
	startTask := new Task(cb.Capture())

	CurrentThread.AllTasks.Insert(startTask)
	CurrentThread.CreateTasks.Push(startTask)
	startTask = null
}


ucontextStartTask := !() -> void
{
	CurrentTask.startTaskThread()
}

internalHVEntryPoint2 := !(int argc,char^^ argv) -> int
{
	InitTaskContext()
	//TaskUVInit()

	CurrentThread = new TaskWorker()
	CurrentThread.ThreadMainTask = CurrentTask
	TaskMainTaskWorker = CurrentThread
	CurrentTask.OSFirstInit()

	TSpawnTask(() ==> {	
		spn := TArraySpan.{char^}//(argv,argc) ///TODO
		spn.pointer = argv
		spn.itSize = argc
		main(spn&)
	})

	EnterTaskThreadCycle(true)
	TaskContextDestructor()
	TaskMainTaskWorker = null
	
	//ur_exit(gTaskIORing)
	//ur_destroy(gTaskIORing)
}


