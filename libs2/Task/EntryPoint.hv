internalHVEntryPoint := !(int argc,char^^ argv) -> int
{ 
	//All function expects to CurrentTask be initialized, this is not working for first function
	//so first function MUST initialize CurrentTask
	voidVal := malloc(TTask->TypeSize)
	internalHVInitClass(voidVal->{TTask^}^)
	CurrentTask = voidVal->{TTask^}
	return internalHVEntryPoint2(argc,argv)
}


gTaskIORing := void^
internalHVEntryPoint2 := !(int argc,char^^ argv) -> int
{
	uring_init()
	gTaskIORing = ur_create()
	ur_init(128,gTaskIORing,0)

	sqe := ur_get_sqe(gTaskIORing)
	ur_sqe_timeout(sqe,1.0,1,0)
	ur_submit(gTaskIORing)

	cqe := void^
	ur_wait_cqe_timeout(gTaskIORing,cqe&->{void^^},10000.0)
	
	spn := TArraySpan.{char^}//(argv,argc) ///TODO
	spn.pointer = argv
	spn.itSize = argc
	return main(spn&)
}
