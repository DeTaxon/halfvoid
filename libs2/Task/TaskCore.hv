

EnterTaskThreadCycle := !(bool isMainThread) -> void
{

	while true
	{
		ct := CurrentThread

		if ct.DeleteTasks.Size() != 0
		{
			delTask := ct.DeleteTasks.Pop()
			ct.AllTasks.Remove(delTask)
			delTask.Destroy()
			delTask = null
			continue
		}
		
		if ct.PendingTasks.Size() != 0
		{
			hm := ct.PendingTasks.Pop()
			hm.switchToTask()
			continue
		}

		if ct.CreateTasks.Size() != 0
		{
			hm := ct.CreateTasks.Pop()
			hm.CreateStack()
			hm.switchToTask()
			continue
		}

		if not isMainThread
		{
			if TaskWorkersToDo.Size() != 0
			{
				hm := TaskWorkersToDo.Pop()
				hm.CreateStack()
				hm.switchToTask()
				continue
			}
		}

		iAmOnUV := false
		TaskCheckMutex.Lock()
		if uvInProgressCount != 0 and not someoneOnUV
		{
			someoneOnUV = true
			iAmOnUV = true
		}else{
			TaskPausedWorkers += 1
			if TaskPausedWorkers == TaskAdditionalWorkers.Size() + 1
			{
				TaskQuitProgram = true
				TaskWaitTasksConVar.NotifyAll()
			}else{
				TaskWaitTasksConVar.Wait(TaskCheckMutex)
			}
			TaskPausedWorkers -= 1
		}
		TaskCheckMutex.Unlock()

		if iAmOnUV
		{
			TaskUVRunOnce()
			TaskCheckMutex.Lock()
			someoneOnUV = false
			TaskCheckMutex.Unlock()
		}

		if TaskQuitProgram
			break
	}

	if isMainThread
	{
		for it : TaskAdditionalWorkers
		{
			it.itThread.Join()
		}
	}
}
someoneOnUV := bool
