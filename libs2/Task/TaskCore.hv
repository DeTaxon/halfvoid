

EnterTaskThreadCycle := !(bool isMainThread) -> void
{

	while true
	{
		ct := CurrentThread

		if ct.DeleteTasks.Size() != 0
		{
			delTask := ct.DeleteTasks.Pop()
			ct.AllTasks.Remove(delTask)
			delTask.Destroy()
			delTask = null
			continue
		}

		TaskCheckMutex.Lock()

		doTask := ct.PopReadyTask()

		if doTask != null
		{
			TaskCheckMutex.Unlock()
			doTask.switchToTask()
			continue
		}

		if TaskTimersArray.Size() != 0 and not someoneOnLoop
		{
			someoneOnLoop = true

			nowTime := GetSteadyTime()
	
			while TaskTimersArray.Size() != 0 and TaskTimersArray[0].0 <= nowTime
			{
				TaskTimersArray[0].1.resume()
				TaskTimersArray.Pop()
			}
			if TaskTimersArray.Size() != 0
			{
				waitTime := TaskTimersArray[0].0 - nowTime
				TaskSleepConVar.WaitFor(TaskCheckMutex,waitTime)
			}
			someoneOnLoop = false
		}else{
			TaskPausedWorkers += 1
			if TaskPausedWorkers == TaskAdditionalWorkers.Size() + 1
			{
				cntr := TaskMainTaskWorker.AllTasks.Size()
				for it : TaskAdditionalWorkers
				{
					cntr += it.AllTasks.Size()
				}
				if cntr == 0
					TaskQuitProgram = true
				TaskWaitTasksConVar.NotifyAll()
			}else{
				TaskWaitTasksConVar.Wait(TaskCheckMutex)
			}
			TaskPausedWorkers -= 1
		}
		TaskCheckMutex.Unlock()


		if TaskQuitProgram
			break
	}

	if isMainThread
	{
		for it : TaskAdditionalWorkers
		{
			it.itThread.Join()
		}
	}
}
someoneOnLoop := bool
