internalClassDefaultSet := !(@T a, T b) -> void
{
	for x : a->AllFields, y : b->AllFields
	{
		x = y
	}
}
internalClassDefaultCompare := !(@T a, T b) -> int
{
	for x : a->AllFields, y : b->AllFields
	{
		result = x <=> y
		if result != 0
			return void
	}
	return 0
}

internalTupleConstructor := !(@Tpl this,args...) -> void
{
	for it,i : args
	{
		this.i = it
	}
}

internalGetVTableVariable := !(@T2 obj) .{@FieldNumber} -> void //result replaced bu compiler
{
	return obj->VTable.FieldNumber
}


internalCheckIsSameType := !(@T^ obj) .{@Cls} -> bool
{
	return obj->VTable == Cls->VTable
}

internalCheckIsInSameType := !(@T^ obj) .{@Cls} -> bool
{
	itId := Cls->TypeId
	tbl := obj->VTable.0->{int^}

	i := 0
	while tbl[i] != 0
	{
		if tbl[i] == itId
			return true
		i += 1
	}
	return false
}
