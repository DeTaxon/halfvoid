

tst := !(int x ) -> !()& -> int
{
	return () ==> 
	{
		i := 0
		while i < x
		{
			yield i*2
			i += 1
		}
	}
}

main := !(int argc, char^^ argv) -> int
{
	z := HybridQueue.{int,3}
	for i : 6
	{
		z.Push(i*2)
	}
	for i : z.Size()
	{
		printf("heh %i\n",z[-1])
	}
	//tst := HybridQueue.{int,2}
	//for i : 6
	//	tst.Push(i*2)
	//for j : tst
	//{
	//	printf("test %i\n",j)
	//	j *= 3
	//}
	//printf("tst %i\n",tst[^])
	return 0
}

