//Cls := class
//{
//	x := int
//	y := s64
//	z := int
//
//	check := virtual !() -> void
//	{
//		printf("nope %i\n",x)
//	}
//}
//Cls2 := class extend Cls
//{
//	w := int
//	check := virtual !() -> void
//	{
//		printf("yep %i\n",x)
//	}
//}

TGCObject2 := class
{
	RefValue := int

	IncRef := virtual !() -> { RefValue += 1}
	DecRef := virtual !() -> { RefValue -= 1}
	Destroy := virtual !() -> void {}
}

internalNew := !() .{@T} -> T^
{
	result = calloc(1,16)->{T^}
}

internalGetDepth := !() -> int
{
}
internalSetDepth := !(int depth) -> void
{
}
internalPushGCObj := !(TGCObject^ obj) -> void
{
}
main := !(int argc, char^^ argv) -> int
{
	test := internalNew().{int}
	printf("z %p\n",test^)
	//test := new TGCObject2
	//printf("a\n")
	//defer printf("c\n")
	//printf("b\n")
	//y := Cls2
	//y.x = 200
	//y.y = 2
	//y.z = 3
	//i := Cls^
	//i = y&
	//i.check()
}
