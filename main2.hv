
internalHVGetTaskLocalTuple := !() -> void^
{
	return g
}


internalHVEntryPoint := !(int argc,char^^ argv) -> int
{
	return main(argc,argv)
}

TArrayView := class .{@T} extend TGCObject
{
	Size := virtual !() -> int {}
	"[]" := virtual !(int i) -> T& {}
	"for" := virtual !() -> !()& -> T& {}
	//Destroy := virtual !() -> void {}

	//Reverse := fake
	//{
	//	"[]" := virtual !(int i ) ->T& {}
	//}
}


//main := !(char[] args) -> void
//{
//	
//}

internalEnterGCFunction := !(TGCIObject^ arr,int maxSize) -> void
{

}
internalLeaveGCFunction := !() -> void
{

}

tst := void^
internalEnterTryCatch := !(void^ ptr,bool cleanGC,int gcInUse) -> void
{
	tst = ptr
}
internalLeaveTryCatch := !() -> void
{
}
internalThrowException := !(IException^ e) -> void
{
}

IException := class extend TGCObject
{

}

Exception := class extend IException
{
	
}

main := !(int argc,char^^ argv) -> int
{
	try
	{
		printf("hello\n")
	llvmLongJump(tst)
		printf("world\n")
	}catch(e)
	{
		printf("nope\n")
	}
	
	return 0
}
