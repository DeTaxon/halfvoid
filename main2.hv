
testDelete := class extend TGCObject
{
	Destroy := virtual !() -> void
	{
		printf("yes\n")
	}
}

//AClass := class
//{
//	ggg := virtual int TODO Creates bug
//	g3 := int
//}
AClass := class
{
	ggg := virtual 3
	g3 := int
}
BClass := class extend AClass
{
	g2 := int
}

main := !(char^[] args) -> int
{
	hm := BClass
	TLock(hm&)
	defer TUnlock(hm&)
	defer printf("hi\n")
	c1()
	c2()
	return 0
}
c1 := !() -> void
{
	h := u8[256]
	h[^] = 0
}
c2 := !() -> void
{
	i := testDelete^
	//i = new testDelete
	g := !{i}
	g.RefValue = 1
	printf("hey %i\n",g.RefValue)
}

DllTest := !() -> void
{
	tst := FSGetFile("libwebp-7.dll")
	mp := tst.GetMap()

	win32LoadLibrary(mp.Get(),tst.Size())
}

RegExpTest := !() -> void
{
	itBuilder := LexBuilder

	itBuilder.ApplyReg("\"((\\\\ [^]) | [^\"\\\\])*\"",1)
	itBuilder.ApplyReg("[0-9]+(.[0-9]+)?",2)
	itBuilder.ApplyReg("0x[0-9a-fA-F]+([0-9a-fA-F]+)?",2)
	itBuilder.ApplyReg(" true | false | null",3)
	itBuilder.ApplyReg("\\{ | \\} | \\, | \\: | \\[ | \\]",4)
	itBuilder.ApplyReg("\\  | \\t | \\n",5)

	res := itBuilder.GenerateMachine()

	// res.PrintIt()

	tst := FSGetFile("test.json")
	mp := tst.GetMap()

	res.RegExpReadText(mp.Get(),mp.Size(), (st,a) ==> {
		if a != 5
		{
			printf("hm <%s>\n",st.GetString().Str())
		}
	})
}
