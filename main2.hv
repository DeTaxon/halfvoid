
MixinObject1 := class
{
	x := int
	Contain := poison !(!(int)&-> bool l) -> bool
	{
		if l(this[^])
			return true
		return false
	}
}
MixinObject2 := class
{
	y := int
	GetY := !() -> int
	{
		return y
	}
	Test := poison !() -> void
	{
		printf("hello\n")
	}
}
MixinVirtualObj := class
{
	z := int
	GetLen := virtual !() -> int
	{
		return z
	}
}
TestTemplate := class extend MixinObject1 , MixinObject2 
{
	z := int
}

main := !(int argc, char^^ argv) -> int
{

	c2 := TestTemplate
	c2.x = 3
	c2.y = 4
	c2.z = 5
	printf("heh %i\n",c2->Type->TypeSize)
	//printf("hoh %i\n",c2.GetLen())
	return 0
}
+
