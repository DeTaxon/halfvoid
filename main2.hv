


Tst := class
{
	this := !() -> void
	{
		printf("hello\n")
	}
	@once
	SomeFunc := !() -> void
	{
		printf("hello\n")
	}
}

@once
K := !(int x) -> void
{
	printf("hey %i\n",x)
}

main := !(int argc, char^^ argv) -> int
{
	r := Tst
	r.SomeFunc()
	r.SomeFunc()
	K(7)
	K(6)

	//TestArr := new int[6]
	//TestArr[^i] = i

	//@omp
	//for goodName : TestArr
	//{
	//	printf("heh %i\n",goodName)
	//	goodName *= 10
	//	printf("hoh %i\n",goodName)
	//	TSleep(1)
	//	//TODO continue
	//	//TODO return
	//}
	//printf("here\n")

	//for i : TestArr
	//	printf("tst %i\n",i)

	//@try_all
	//{
	//	//defer TODO
	//	// return TODO
	//	throw new Exception("lol")
	//	printf("line 1\n")
	//	printf("line 2\n")
	//	throw new Exception("lol")
	//	printf("line 3\n")
	//}
	
}

