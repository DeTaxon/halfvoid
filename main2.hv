


cls1 := class extend TGCObject
{
	// IsData := virtual false
	Ha := virtual !() -> void
	{
		printf("hi\n")
	}
}
cls2 := class extend cls1
{
	// IsData := virtual true
	
	Ha := virtual !() -> void
	{
		printf("ho\n")
	}
}

main := !(char^[] args) -> int
{
	hm := new cls1
	hm.Ha()
	hm = new cls2
	hm.Ha()

	// j := () ==> {
	// 	x = 10
	// 	x = 20
	// }
	// j()

	// itBuilder := LexBuilder

	// itBuilder.ApplyReg("\"((\\\\ [^]) | [^\"\\\\])*\"",1)
	// itBuilder.ApplyReg("[0-9]+(.[0-9]+)?",2)
	// itBuilder.ApplyReg("0x[0-9a-fA-F]+([0-9a-fA-F]+)?",2)
	// itBuilder.ApplyReg(" true | false | null",3)
	// itBuilder.ApplyReg("\\{ | \\} | \\, | \\: | \\[ | \\]",4)
	// itBuilder.ApplyReg("\\  | \\t | \\n",5)

	// res := itBuilder.GenerateMachine()

	// // res.PrintIt()

	// tst := FSGetFile("test.json")
	// mp := tst.GetMap()

	// res.RegExpReadText(mp.Get(),mp.Size(), (st,a) ==> {
	// 	if a != 5
	// 	{
	// 		printf("hm <%s>\n",st.GetString().Str())
	// 	}
	// })
	
	return 0
}
