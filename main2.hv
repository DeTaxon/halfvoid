
ZeroMem2 := !(@T& obj) -> void
{
	memset(obj&,0,T->TypeSize)
	if T->Group == "Class"
		ReconstructClass(obj)
}

tst := !(int x ) -> !()& -> int
{
	return () ==> 
	{
		i := 0
		while i < x
		{
			yield i*2
			i += 1
		}
	}
}

main := !(int argc, char^^ argv) -> int
{
	z := List.{int}
	z << 1 << 12 << 0
	for i,j : tst(5)
	//for i,j : z
	{
		printf("heh %i %i\n",i,j)
	}
	//tst := HybridQueue.{int,2}
	//for i : 6
	//	tst.Push(i*2)
	//for j : tst
	//{
	//	printf("test %i\n",j)
	//	j *= 3
	//}
	//printf("tst %i\n",tst[^])
	return 0
}

