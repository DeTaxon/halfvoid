AllocOnly2G := class  extend IMemoryPool
{
	memStart := u8^
	itLoaded := int
	this := !() -> void
	{
		len := 2->{size_t}
		len *= 1024
		len *= 1024
		len *= 1024
		memStart = mmap(null,len,PROT_READ or_b PROT_WRITE,MAP_SHARED or_b MAP_ANON,-1,null)
	}
	GetMem := virtual !(size_t size, int align,int prefix) -> void^
	{
		newSize := itLoaded
		if align > 1 {
			newSize +=  0xFF % align
			newSize -= newSize % align
		}
		itLoaded = newSize + size
		return memStart[newSize]&
	}
	FreeMem := virtual !(void^ memPtr) -> void
	{
	}
}
