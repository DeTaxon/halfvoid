
PageMemory := class
{
	memPointer := void^
	memSize := s64
	
	Create := !(s64 setMemSize, char^ flags) -> bool
	{
		memFlags := PAGE_NOACCESS
		if 'r' in flags
			memFlags = PAGE_READONLY
		if 'w' in flags
			memFlags = PAGE_READWRITE
		if 'e' in flags
			memFlags = memFlags shl 4

		memPointer = VirtualAlloc(null,setMemSize,MEM_COMMIT,memFlags)
		memSize = setMemSize
	}
	GetPointer := !() -> void^
	{
		return memPointer
	}
	Size := !() -> s64
	{
		return memSize
	}
	Close := !() -> void
	{
		if memPointer != null
			VirtualFree(memPointer)
		//TODO cleanup
		memPointer = null
		memSize = 0
	}
}
