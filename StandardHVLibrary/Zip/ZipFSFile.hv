File := class extend vRepoObject
{
	ptrToRepo := vRepo^
	//ptrToZip := vZipEntry^
	fileSize := u64

	this := !() -> void
	{
	}
	GetFile := !(StringView fileName) -> File^
	{
		return ptrToRepo.GetFile(fileName,GetParentFolder())
	}
	GetMap := virtual !() -> FileView^
	{
		//if ptrToZip != null
		//{
		//	return ptrToZip.GetMap()
		//}

		return new ZipFSFileView(this&)
	}
	GetBlob := virtual !() -> Blob^
	{
		fileMap := GetMap()
		fileBlob := MakeBlob(fileMap.Size())
		if fileMap.Size() != 0
			memcpy(fileBlob.GetPointer(),fileMap.Get(),fileMap.Size())
		return fileBlob
	}
	GetModificationTime := !() -> u64
	{
		return fsGetModificationTime(GetPath().Str())
	}
	GetParentFolder := !() -> Folder^
	{
		lastSlash := 0
		ptr := absPath.Str()
		for i : absPath.Size()
		{
			if ptr[i] == '/'
			{
				lastSlash = i
			}
		}
		if lastSlash == 0
			return null

		result = new Folder
		result.absPath = absPath^[0..lastSlash].GetString()
		result.objName = result.absPath //TODO norman obj Name
	}

	IsVirtual := virtual !() -> bool 
	{
		return false
	}
	GetId := !() -> u64
	{	
		return osFileId(GetPath().Str())
	}
	Size := !() -> size_t
	{
		// if ptrToZip != null
		// {
		// 	return ptrToZip.Size()
		// }
		// return fileSize
		return fileSize
	}
	IsValid := !() -> bool
	{
	}
}
