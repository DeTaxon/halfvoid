
vRepo := class extend TGCObject
{
	zipFolders := AVLSet.{ZipFile^}

	Init := !(StringView pathName)-> void
	{
	}

	ReadFolder := !(Str p,bool recur,!(FSObject^)& -> void callb) -> void
	{
		repoObj := this&
		osReadFolder(p.Str(),x ==> {

			if x == "." or x == ".."
				return void

			LocalPath := Str

			if p == "."
			{
				LocalPath = x
			}else{
				LocalPath = CreateString(p.GetString(),"/",x)
			}


			if osIsFolder(LocalPath.Str())
			{
				if recur
				{
					ReadFolder(LocalPath,recur,callb)
				}
				fold := new Folder
				fold.localPath = LocalPath
				fold.objName = x
				callb(fold)
			}else{
				diffSize := LocalPath.Size() - p.Size()
				fil := new File
				fil.ptrToRepo = repoObj
				fil.fileSize = osFileSize(LocalPath.Str())
				fil.localPath = LocalPath
				fil.objName = x

				callb(fil)
			}
		})
	}
	GetFile := !(Str fileName)-> File^
	{
		return GetFile(fileName,null)
	}
	GetFile := !(Str fileName,Folder^ rrF) -> File^
	{
		st := Str
		if rrF == null
		{
			st = fileName
		}else{
			st = CreateString(rrF.GetPath(),"/",fileName)
		}

		if not fsIsExist(st.Str())
			return null
		if osIsFolder(st.Str())
			return null
		result = new File
		result.localPath = st
		result.objName = st
		result.fileSize = osFileSize(st.Str())
	}
}
