"@omp for" := !(fBody) -> void
{
	workId := 0
	TAwaitManyWorks(0,(tId) ==> {
		curId := InterlockAdd(workId,1)
		i := 0
		fBody((x) ==> {
			c := i
			if curId < c
				curId = InterlockAdd(workId,1)
			i += 1
			if curId != c
				return void
			x()
		})
	})
}

"@once func" := !(args...) .{@func} -> func->Type->ResultType
{
	called := static false
	res := static func->Type->ResultType
	if called
		return res
	called = true
	res = func(args...)
	return res
}

"@once block" := !(!()&->void lambd,bool called = static false) -> void
{
	if called
		return void
	lambd()
	called = true
}

