
MappedFile := class extend TGCObject
{
	hndl := RawFileStream
	fileSize  := u64
	point := u8^
	shareFlag := int
	mapId := void^
	this := !(Str fileName,char^ flg) -> void
	{
		point = null
		Open(fileName,flg)
	}
	Open := !(Str fileName,char^ flg) -> bool
	{
		shareFlag = PAGE_READONLY

		if 'w' in flg
			shareFlag  = PAGE_READWRITE

		if not hndl.Open(fileName,flg)
			return false

		fileSize = osFileSize(fileName)
		
		mapId = CreateFileMappingW(hndl.FileFd,null,shareFlag,fileSize&->{u32^}[1],fileSize&->{u32^}[0],null)
		if mapId&->{u64^}^ == not_b 0U
		{
			hndl.Close()
			return false
		}
		accTyp := FILE_MAP_READ
		if shareFlag == PAGE_READWRITE accTyp = FILE_MAP_ALL_ACCESS
		point = MapViewOfFile(mapId,accTyp,0,0,fileSize)->{u8^}

		return true
	}

	Get := !() -> u8^
	{
		return point
	}

	ResizeFile := !(s64 newSize) -> void
	{
		assert(false) //TODO implement it
	}
	Size := !() -> int
	{
		return fileSize
	}
	Destroy := virtual !() -> void
	{
		Close()
	}
	Close := !() -> void
	{
		if point != null
		{
			UnmapViewOfFile(mapId)
			CloseHandle(mapId)
			point = null
		}
	}
}
