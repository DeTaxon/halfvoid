Stream := class extend TGCObject
{
	Read := virtual !(void^ data, s64 size) -> s64
	{
		assert(false)
		return 0
	}
	Write := virtual !(void^ data, s64 size) -> s64
	{
		assert(false)
		return 0
	}
	Close := virtual !() -> void
	{
	}



	"<<" := !(char^ strData) -> ref Stream
	{
		Write(strData,strlen(strData))
		return this
	}
	"<<" := !(StringView strData) -> ref Stream
	{
		Write(strData.NonNullStr(),strData.Size())
		return this
	}
	"<<" := !(StringSpan strData) -> ref Stream
	{
		Write(strData.NonNullStr(),strData.Size())
		return this
	}
	"<<" := !(int value) -> ref Stream
	{
		if value == 0
		{
			Write("0",1)
			return this
		}else if value == (-2147483647) - 1 {
			Write("-2147483648",11)
		}else{
			intVal := char[32]
			isNegative := value < 0
			if isNegative
				value = -value
			i := 30
			while value != 0
			{
				remd := value mod 10
				value = value div 10
				intVal[i] = '0' + remd
				i -= 1
			}
			if isNegative
			{
				intVal[i] = '-'
				i -= 1
			}

			Write(intVal[i + 1]&,30 - i)
			return this
		}
	}
	"<<" := !(bool value) -> ref Stream
	{
		this << (value ?: "true" : "false")
		return this
	}
	"<<" := !(s64 value) -> ref Stream
	{
		intVal := char[40]
		len := sprintf(intVal[0]&,"%li",value)
		Write(intVal[0]&,len)
		return this
	}
	"<<" := !(u64 value) -> ref Stream
	{
		intVal := char[40]
		len := sprintf(intVal[0]&,"%lu",value)
		Write(intVal[0]&,len)
		return this
	}
	"<<" := !(double value) -> ref Stream
	{
		val := ToString(value)
		Write(val.NonNullStr(),val.Size())
		return this
	}
}
