MallocMemoryPool := class extend IMemoryPool
{
	GetMem := virtual !(size_t size, int align,int prefix) -> void^
	{
		return calloc(1,size)
	}
	FreeMem := virtual !(void^ memPtr) -> void
	{
		free(memPtr)
	}
	Destroy := !() -> void
	{
	}
}

MallocPoolBlock := !() -> void
{
	gMallocMemPool.Push()
}defer_tail ()
{
	gMallocMemPool.Pop()
}
gMallocMemPool := MallocMemoryPool
