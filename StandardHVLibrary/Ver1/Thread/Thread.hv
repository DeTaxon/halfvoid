


_threadProxyFunc := !(void^ x) -> void
{
	_TaskPtrReset()
	_taskInitMem(_TaskPtrGet())
	_threadProxyFuncInner(x)
}
_threadProxyFuncInner := !(void^ x) -> void
{
	//MallocPoolBlock()
	asLambd := x->{!()&->void}
	asLambd()
	asLambd.Destroy()
	gTemporaryPool.Destroy()
}

Thread := class
{
	this := !(!()&->void lambd) ->	void
	{
		captLambd := lambd.Capture()
		_threadStart(captLambd)
	}
}


