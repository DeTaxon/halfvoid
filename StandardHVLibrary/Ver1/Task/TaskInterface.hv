
TMonitor := !(char^ pathName,int modes,bool recursive,MonitorCallback callb) -> void
{
	CurrentTaskBox.Monitor(pathName,modes,recursive,callb)
}
TAwaitWork := !(!()&->void lambd) -> void
{
	if CurrentTaskBox != null
	{
		CurrentTaskBox.AwaitWork(lambd)
	}else{
		lambd()
	}
}
TAwaitManyWorks := !(int num,!(int)&->void lambd) -> void
{
	if CurrentTaskBox != null
	{
		CurrentTaskBox.AwaitManyWorks(num,lambd)
	}else{
		for i : num
			lambd(i)
	}
}
TStartWork := !(!()&->void lambd) -> TaskBarrier^
{
	assert(CurrentTaskBox != null)
	return CurrentTaskBox.StartWork(lambd)
}

TPauseTask := !(int^ resId) -> void
{
	if CurrentTaskBox != null
		CurrentTaskBox.PauseTask(resId)
}
TResumeTask := !(int taskId) -> void
{
	if CurrentTaskBox != null
		CurrentTaskBox.ResumeTask(taskId)
}
TExpectWorkers := !(int exp) -> void
{
	if CurrentTaskBox != null
		CurrentTaskBox.ExpectWorkers(exp)
}
TSpawnTask := !(!()&->void lmb) -> void
{
	assert(CurrentTaskBox != null)
	CurrentTaskBox.Spawn(lmb)
}

TDoIO := !(!(void^)&->void x)
{
	assert(CurrentTask != null)
	CurrentTaskBox.waitOnIO(x)

}

TYield := !() -> void
{
	if CurrentTaskBox != null
	{
		CurrentTaskBox.Yield()
	}
}
