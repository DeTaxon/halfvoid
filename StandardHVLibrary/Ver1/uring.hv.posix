
iovec := class
{
	block := void^
	size := size_t
}

sqe_node := class
{
	opcode := u8
	flags := u8
	u16 := ioprio
	fd := s32
	off := u64 // addr2
	addr := u64 // splice_off_in
	len := u32
	op_flags := u32
	user_data := u64
	buf_index := u16 // packed?
	personality := u16
	file_index := u32
	pad2 := u64[2]
}

cqe_node := class
{
	user_data := u64
	res := s32
	flags := u32
}

io_uring_prep_rw := !(int op,sqe_node^ sqe,int fd, void^ addr, int len, u64 offset) -> void 
{
	ZeroMem(sqe^)

	sqe.fd = fd
	sqe.opcode = op
	sqe.addr = addr->{size_t}
	sqe.off = offset
	sqe.len = len
}

io_uring_prep_readv := !(sqe_node^ sqe,int fd, void^ addr, int len, u64 offset) -> int
{
	io_uring_prep_rw(IORING_OP_READV,sqe,fd,addr,len,offset)
}

io_uring_wait_cqe_nr := !(void^ ctx, void^^ cqe,int wait_nr) -> int
{
	return __io_uring_get_cqe(ctx,cqe,0,wait_nr,null)
}
io_uring_wait_cqe := !(void^ ctx, void^^ cqe) -> int
{
	//TODO: uncomment
	//if __io_uring_peek_cqe(ctx,cqe,null) != 0 and cqe^ == null
	//	return 0
	return io_uring_wait_cqe_nr(ctx,cqe,1)
}
