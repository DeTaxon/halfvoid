
GlobalTracyInUse := bool

tracyZoneData := class
{
	Name := char^
	Function := char^
	File := char^
	Line := u32
	Color := u32
}

tracyZoneDestructor := class extend TGCObject
{
	dat := tracyZoneData
	zoneName := Str
	ctx := u64
	enabled := bool
	Destroy := virtual !() -> void
	{
		if #Var("Tracy")
		{
			if enabled
			{
				___tracy_emit_zone_end(ctx)
			}
			enabled = false
		}
	}
}

TracyMessage := !(Str setMessage) -> void
{
	if #Var("Tracy")
	{
		___tracy_emit_message(setMessage.Str(),setMessage.Size(),16)
	}
}
TracyPrintf := !(char^ msg,...) -> void
{
	if #Var("Tracy")
	{
		echo := TEchoStream
		va := va_list
		va_start(va&)
		vprintf_hv_stream(echo,msg,va&)
		va_end(va&)
		st := Str
		st->AsString = echo.GetString()
		TracyMessage(st)
	}
}


TracyZone := !(Str zoneName) -> tracyZoneDestructor
{
	if #Var("Tracy")
	{
		result.zoneName = zoneName
		result.dat.Name = result.zoneName.Str()
		result.dat.Function = "None"
		result.dat.File = "main.hv"
		result.ctx = ___tracy_emit_zone_begin(result.dat&,1)
		result.enabled = true
	}
}
TracyZoneS := !(char^ zoneName) -> tracyZoneDestructor
{
	if #Var("Tracy")
	{
		result.dat.Name = zoneName
		result.dat.Function = "None"
		result.dat.File = "main.hv"
		result.ctx = ___tracy_emit_zone_begin_callstack(result.dat&,63,1)
		result.enabled = true
	}
}
