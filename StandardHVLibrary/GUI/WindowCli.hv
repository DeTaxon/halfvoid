WindowCli := class extend TGCObject
{
	mainGUIObject := GUIObject^

	ctx := DrawCliContext
	layoutContext := LayoutContext

	InitWindow := virtual !() -> GUIObject^
	{
		return new LayoutVertical(![])
	}
	Run := !() -> void
	{
		ctx.Window = initscr()
		raw()
		noecho()
		nonl()

		mainGUIObject = InitWindow()
		
		layoutContext.w = getmaxx(ctx.Window)
		layoutContext.h = getmaxy(ctx.Window)

		mainGUIObject.GetLayout(layoutContext&)
		mainGUIObject.SetLayout(layoutContext&,vec2f(layoutContext.w,layoutContext.h))
		
		while true
		{
			draw()

			c := @work wgetch(ctx.Window) //TODO more normal way to wait

			if c == 27 //ESC
				break
		}
		endwin()
	}
	draw := !() -> void
	{
		wclear(ctx.Window)
		mainGUIObject.DrawCli(ctx&,vec2i(0,0))
		refresh()
	}
	Refresh := !() -> void
	{
		draw()
	}
}
DrawCliContext := class
{
	TerminalSize := vec2i
	Window := void^

}
