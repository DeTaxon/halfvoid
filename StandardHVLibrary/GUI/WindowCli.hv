WindowCli := class extend TGCObject
{
	mainGUIObject := GUIObject^

	ctx := DrawCliContext
	layoutContext := LayoutContext

	working := bool

	InitWindow := virtual !() -> GUIObject^
	{
		return new LayoutVertical(![])
	}

	Quit := !() -> void
	{
		working = false
	}
	Run := !() -> void
	{
		ctx.Window = initscr()
		raw()
		noecho()
		nonl()

		mainGUIObject = InitWindow()
		
		layoutContext.w = getmaxx(ctx.Window)
		layoutContext.h = getmaxy(ctx.Window)
		layoutContext.DrawType = "Text"

		mainGUIObject.GetLayout(layoutContext&)
		mainGUIObject.SetLayout(layoutContext&,vec2f(layoutContext.w,layoutContext.h))
		
		working = true
		while working
		{
			draw()


			if #OS() == "Linux"
			{
				pollList := pollfd
				pollList.fd = STDIN_FILENO 
				pollList.events = POLLIN


				@work poll(pollList&,1,500)
				if pollList.revents != 0
				{
					c := wgetch(ctx.Window) //TODO more normal way to wait
					KeyPressed(c)
				}
			}
			if #OS() == "Windows"
			{
				assert(false)
			}

		}
		endwin()
	}
	draw := !() -> void
	{
		wclear(ctx.Window)
		mainGUIObject.DrawCli(ctx&,vec2i(0,0))
		refresh()
	}
	Refresh := !() -> void
	{
		draw()
	}
	KeyPressed := virtual !(int keyChar) -> void
	{
	}
}
DrawCliContext := class
{
	TerminalSize := vec2i
	Window := void^

}
