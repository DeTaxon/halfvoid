
pageSize := 4096 //TODO: unconst
AllocOnly2G := class  extend IMemoryPool
{
	memStart := u8^
	itLoaded := int
	commitedPages := int
	this := !() -> void
	{
		len := 2->{size_t}
		len *= 1024
		len *= 1024
		len *= 1024
		memStart = VirtualAlloc(null,len,MEM_RESERVE,PAGE_READWRITE)
	}
	GetMem := virtual !(size_t size, int align,int prefix) -> void^
	{
		newSize := itLoaded
		if align > 1 {
			newSize +=  0xFF % align
			newSize -= newSize % align
		}
		itLoaded = newSize + size
		if itLoaded > commitedPages
		{
			upperBound := (itLoaded - commitedPages) + (pageSize - 1)
			upperBound = upperBound div pageSize
			upperBound = upperBound*pageSize
			VirtualAlloc(memStart[commitedPages]&,upperBound,MEM_COMMIT,PAGE_READWRITE)
			commitedPages += upperBound
		}
		return memStart[newSize]&
	}
	FreeMem := virtual !(void^ memPtr) -> void
	{
	}
}
