

HV := HV_Context^
HV_Context := class
{
	GetType := virtual !(StringView typeName) -> void^ {}
	GetTypePointer := virtual !(void^ baseType) -> void^ {}
	GetTypeBase := virtual !(void^ baseType) -> void^ {} // pointer of type to it's type
	GetFuncType := virtual !(void^[] types,bool[] isReference, void^ resultType,bool resultReference,bool isVariadicArguments) -> void^ {}

	CreateClass := virtual !() -> HV_Class^ {}

	Create_int32 := virtual !(int value) -> void^ {}
	CreateFunction := virtual !(Str funcText) -> void^ {}

	EmitError := virtual !(Str ErrorMessage) -> void {}
}

HV_Context_Empty := HV_Context

HV_Class := class
{
	AddField := virtual !(Str fieldName,void^ fieldType) -> void {}
	AddMethod := virtual !(Str funcName,void^ fncObj) -> void {}
	AddMethodStr := virtual !(Str funcName,Str fncText) -> void {}
	AddCallback_GetFieldFailed := virtual !(!(StringView)&->void^ cb ) -> void{}
	GetType := virtual !() -> void^ {}
}

HV_Object := class
{
	IsConst := virtual false
	//TODO
	//GetType
}

HV_FunctionTemplate := class
{
	GetFunction := virtual !() -> HV_Function^ {}
}
