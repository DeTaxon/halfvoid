

HV := HV_Context^
HV_Context := class
{
	GetType := virtual !(Str typeName) -> HV_Object^ {}
	GetTypePointer := virtual !(HV_Object^ baseType) -> HV_Object^ {}
	GetTypeBase := virtual !(HV_Object^ baseType) -> HV_Object^ {} // pointer of type to it's type
	GetFuncType := virtual !(HV_Object^[] types,bool[] isReference, HV_Object^ resultType,bool resultReference,bool isVariadicArguments) -> HV_Object^ {}

	CreateClass := virtual !() -> HV_Class^ {}

	CreateInt32 := virtual !(int value) -> HV_Object^ {}
	CreateString := virtual !(Str value) -> HV_Object^ {}
	CreateFunction := virtual !(Str funcText) -> HV_Object^ {}

	EmitError := virtual !(Str ErrorMessage) -> void {}

	FindFunction := virtual !(Str funcName) -> HV_Object^ {}
	ForEachFunction := virtual !(!(HV_Object^)&-> void cb ) -> void {}
	ForEachFuncElement := virtual !(HV_Object^ obj, !(HV_Object^)&-> void cb) -> void {}

}

HV_Context_Empty := HV_Context

HV_Class := class
{
	AddField := virtual !(Str fieldName,HV_Object^ fieldType) -> void {}
	AddMethod := virtual !(Str funcName,HV_Object^ fncObj) -> void {}
	AddMethodStr := virtual !(Str funcName,Str fncText) -> void {}
	AddCallback_GetFieldFailed := virtual !(!(Str)&->HV_Object^ cb ) -> void{}
	GetType := virtual !() -> HV_Object^ {}
}

HV_Object := class
{
	IsConst := virtual false
	//TODO
	//GetType
	
	IsEditSupported := virtual false
	ElementName := virtual "Unknown"

	SubElementsCount := virtual !() -> int { return 0 }
	GetSubElement := virtual !(int index) -> HV_Object^ { return null }
	AddSubElement := virtual !(HV_Object^ newElement) -> bool { return false }
	AddSubElementAt := virtual !(int index, HV_Object^ newElement) -> bool { return false }
	ReplaceSubElement := virtual !(int index, HV_Object^ newElement) -> bool { return false }
	DeleteElement := virtual !(int index) -> bool { return false}

	GetStringValue := virtual !() -> Str {}
}

HV_FunctionTemplate := class
{
	GetFunction := virtual !() -> HV_Function^ {}
}
