
TGCObject := class
{
	//IncRef := virtual !() -> void { }
	//DecRef := virtual !() -> void { }
	//Destroy := virtual !() -> void {}
	RefValue := int

	IncRef := !() -> void { RefValue += 1 }
	DecRef := !() -> void {
		RefValue -= 1
		if RefValue == 0
		{
			//Destroy()
			//postDestroy()
			//SelfDelete()
		}
	}
	Destroy := virtual !() -> void {}
	SelfDelete := virtual !() -> void
	{
		//delete this&
	}

	postDestroy := poison virtual !() -> void
	{
		//internalGCClearClass(this)
	}
}


//TODO delete after new stable library
"=" := !(TGCObject^& itm1, TGCObject^ itm2) -> void
{
	itm2?.IncRef()
	if itm1 != null
	{
		itm1.DecRef()
	}
	itm1&->{void^^}^ = itm2->{void^}
}

internalGCSetVal := !(@T^& itm1,T^ itm2) -> void
{
	itm2?.IncRef()
	if itm1 != null
	{
		itm1.DecRef()
	}
	itm1&->{void^^}^ = itm2->{void^}
}

internalGCClearClass := !(@T itm) -> void
{
	//for it,ind : itm->AllFields
	//{
	//	if it->Type >= TGCObject
	//	{
	//		it.Destroy()
	//	}
	//	if it->IsGCPointer
	//	{
	//		it = null
	//	}
	//}
}
internalGC_SetNull := !(TGCObject^& arg0) -> void
{
	//arg0 = null->{TGCObject^}

}
