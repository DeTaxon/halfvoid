internalHVNew := !() .{@T} -> T^
{
	objSize := max(T->TypeSize,1)
	result&->{void^^}^ = calloc(1,max(T->TypeSize,1) ) //way to bypass DecRef
	if T->TypeGroup == "Class"
		internalHVInitClass(result^)

	//if #Var("Tracy") and GlobalTracyInUse
	//{
	//	___tracy_emit_memory_alloc_callstack?(result,objSize,62,0)
	//}
}
internalHVNewConstructed := !(@T^ obj, args...) -> T^ //TODO delete after halfvoid updated
{
	//printf("internal func\n")
	result = obj
	result.this(args...)
}

internalHVDelete := !(void^ x) -> void
{
	//if #Var("Tracy") and GlobalTracyInUse
	//{
	//	___tracy_emit_memory_free_callstack?(x,62,0)
	//}
	free(x)
}

GetAllocator := !() -> IAllocator^
{
	defAlloc := static DefaultAllocator
	return defAlloc&
}

