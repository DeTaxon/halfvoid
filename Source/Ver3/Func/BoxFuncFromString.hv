
BoxFuncBodyFromString := class extend BoxFuncBody
{
	this := !(char^ funcName ,Type^ fType,char^ strToParse) -> void
	{
		ABox.ItId = GetNewId()
		outLabel."this"()
		MyFuncType = fType->{TypeFunc^}
		OutputName = funcName
		FuncName = OutputName
		GetObjectsFromMemory(Path(""),strToParse,strlen(strToParse),this&)
		if Down != null
		{
			itr := Down
			while itr.Right != null itr = itr.Right
			UNext(Down, new ObjSkobs("{}"),itr)
			MakeItBlock(Down)
		}
		WorkBag.Push(Down,State_Start)
		WorkBag.Push(this&,State_Start)
		parsed = true
	}
	GetScope := virtual !() -> int { return -1 }
}
