StartStatusMonitor := !() -> void
{
	TSpawnTask(() ==> {
		cliWorks += 1
		while not cliQuit
		{
			mainStatusFunc()
			TSleep(1)
		}
		cliWorks -= 1
	})
}

mainStatusFunc := !() -> void
{
	lst := ref cliWin.StatusList

	if WorkBag.works.Size() == 0
	{
		lst.Destroy()
		lst.Push("Everything compiled")
		cliWin.Refresh()
	}else{

		lst.Destroy()

		st := TEchoStream
		st << "Work units in progress " << WorkBag.works.Size()

		lst.Push(st.GetStr())


		gotWorks := AVLSet.{CWorkUnit^}
		maxMessages := 30
		for it : WorkBag.works
		{
			msg := it.GetErrorMessage()
			if msg->AsString == null
				continue
			lst.Push(msg)
			gotWorks.Insert(it)

			maxMessages -= 1
			if maxMessages <= 0
				break
		}

		if maxMessages != 0
		{
			for it : WorkBag.works
			{
				if gotWorks.Contain(it)
					continue

				st := TEchoStream
				switch it is
				{
				case CWorkClassCompile
					st << "Working on class " << it.itClass.GetGoodName()
					lst.Push(st.GetStr()->AsString)
				case CWorkFuncCompile
					st << "Working on function " << it.itFunc.GetGoodName() << " " << it.itFunc.GetFileScope().fileName.GetString().Str() << ":" << it.itLine
					lst.Push(st.GetStr()->AsString)
				}

				maxMessages -= 1
				if maxMessages <= 0
					break
			}
		}

		cliWin.Refresh()
	}
}
