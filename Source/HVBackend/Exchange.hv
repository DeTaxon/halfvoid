AppendClass IntExchange
{
	WriteMC := virtual !(MCBuildContext^ ctx) -> WriteMCResult
	{
		newVar := ctx.CreateVar(ObjType)
		dwn := Down.WriteMC(ctx)
		HVB_ins_cast(ctx,newVar,dwn.CreatedId)
		result.CreatedId = newVar
	}
}
AppendClass FloatExchange
{
	WriteMC := virtual !(MCBuildContext^ ctx) -> WriteMCResult
	{
		newVar := ctx.CreateVar(ObjType)
		dwn := Down.WriteMC(ctx)
		HVB_ins_cast(ctx,newVar,dwn.CreatedId)
		result.CreatedId = newVar
	}
}
AppendClass FloatToIntExchange
{
	WriteMC := virtual !(MCBuildContext^ ctx) -> WriteMCResult
	{
		assert(false)
	}
}
AppendClass IntToFloatExchange
{
	WriteMC := virtual !(MCBuildContext^ ctx) -> WriteMCResult
	{
		newVar := ctx.CreateVar(ObjType)
		dwn := Down.WriteMC(ctx)
		HVB_ins_cast(ctx,newVar,dwn.CreatedId)
		result.CreatedId = newVar
	}
}
AppendClass PtrExchange
{
	WriteMC := virtual !(MCBuildContext^ ctx) -> WriteMCResult
	{
		newVar := ctx.CreateVar(ObjType)
		dwn := Down.WriteMC(ctx)
		HVB_ins_cast(ctx,newVar,dwn.CreatedId)
		result.CreatedId = newVar
	}
}
AppendClass PtrRefExchange
{
	WriteMC := virtual !(MCBuildContext^ ctx) -> WriteMCResult
	{
		dwnRes := Down.WriteMC(ctx)

		baseVar := ctx.CreateVar(Down.GetType().GetPoint())
		resVar := ctx.CreateVar(ObjType.GetPoint())
		resRef := ctx.CreateReference(ObjType)

		zero := ctx.AddInteger(0)
		HVB_ins_get_pointer(ctx,baseVar,dwnRes.CreatedId)
		HVB_ins_move(ctx,resVar,baseVar)
		HVB_ins_load_element(ctx,resRef,resVar,zero)

		result.CreatedId = resRef
	}
}
AppendClass RefExchange
{
	WriteMC := virtual !(MCBuildContext^ ctx) -> WriteMCResult
	{
		dwnRes := Down.WriteMC(ctx)

		baseVar := ctx.CreateVar(Down.GetType().GetPoint())
		resVar := ctx.CreateVar(ObjType.GetPoint())
		resRef := ctx.CreateReference(ObjType)

		zero := ctx.AddInteger(0)
		HVB_ins_get_pointer(ctx,baseVar,dwnRes.CreatedId)
		HVB_ins_move(ctx,resVar,baseVar)
		HVB_ins_load_element(ctx,resRef,resVar,zero)

		result.CreatedId = resRef
	}
}
AppendClass ArrToPtr
{
	WriteMC := virtual !(MCBuildContext^ ctx) -> WriteMCResult
	{
		newVar := ctx.CreateVar(ObjType)
		dwnRes := Down.WriteMC(ctx).CreatedId
		HVB_ins_get_pointer(ctx,newVar,dwnRes)
		result.CreatedId = newVar
	}
}
