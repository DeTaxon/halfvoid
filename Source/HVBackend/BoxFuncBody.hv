AppendClass BoxFuncBody
{
	CreateMCFunction := virtual !(MCBuildContext^ ctx) -> void
	{
		fType := GetType()->{TypeFunc^}
		resType := fType.ResultType
		ctx.InputsIndxCount = Params.Size()
		if resType != GTypeVoid
		{
			if resType.IsComplexReturn() and not fType.ResultRef
			{
				ctx.InputsIndxStart = 1
				ctx.InputsIndxCount += 1
				varId := ctx.AddLocalVar(ResultVar)
				assert(varId == 1)
			}else{
				assert(ResultVar != null)
				varId := ctx.AddLocalVar(ResultVar)
				assert(varId == 1)
				ctx.ResultIndex = varId
				ctx.InputsIndxStart = 2
			}
		}else{
			ctx.InputsIndxStart = 1
		}

		ctx.AddLocalVar(Params[^])
		ctx.AddLocalVar(ParamsLocalVars[^])

		if YieldStateInt != null
		{
			yieldState := YieldStateInt.CreateVarCall().WriteMC(ctx).CreatedId

			for it,i : Yields
			{
				constVal := ctx.AddInteger(i + 1)
				goLabel := ctx.GetLabel(it.GetLabel())

				cmpRes := HVB_ins_cmp_new(ctx,yieldState,"==",constVal)
				HVB_ins_jump_if_bool(ctx,goLabel,cmpRes)
			}
		}else{
			ctx.AddLocalVar(LocalVars[^])
			ctx.AddLocalVar(LocalVarsDeferChecks[^])

		}

		LocalVarsDeferChecks[^].WriteMC(ctx)
		ParamsLocalVars[^].WriteMC(ctx)
		ResultVar?.WriteMC(ctx)
		Params[^].WriteMC(ctx)

		fileObj := GetFileScope()
		if fileObj != null
		{
			HVB_ins_debug_set_file(ctx,fileObj.fileName.GetString().Str())
			HVB_ins_debug_set_line(ctx,bdy?.Line?.Line)
		}

		body?.WriteMC(ctx)

		if YieldStateInt != null
		{
			YieldFinilize.WriteMC(ctx)
		}

		ExitLabel.WriteGoMC(ctx)
		ctx.WriteExitPathsMC()
		ExitLabel.WriteMC(ctx)
	}
}

AppendClass FuncLocalDebugInfoValue
{
	WriteMC := virtual !(MCBuildContext^ ctx) -> WriteMCResult
	{
	}
}
AppendClass FuncLocalCallIfTrue
{
	WriteDeferMC := virtual !(MCBuildContext^ ctx) -> WriteMCResult
	{
		assert(ctx.objects->VTable != null)

		trueLabel := ctx.CreateLabel() 
		falseLabel := ctx.CreateLabel()

		varVal := GetVar.WriteMC(ctx).CreatedId

		HVB_ins_jump_if_bool(ctx,trueLabel,varVal)
		HVB_ins_jump(ctx,falseLabel)

		HVB_ins_label(ctx,trueLabel)

		DownCall.WriteMC(ctx)
		DownCall2?.WriteMC(ctx)
		storeFalse.WriteMC(ctx)
		HVB_ins_jump(ctx,falseLabel)

		HVB_ins_label(ctx,falseLabel)
	}
}
