TryGetMetaGlobals := !(Token^ obj) -> BoxExeObj^
{
	if obj is TokenIndent
	{
	}else{ return null }

	nm := obj->{TokenIndent^}.Value
	if nm.Size() == 0 or nm[0] != '$'
		return null

	if nm == "$GlobalVariables"
	{
		return new GlobalVarsIterator
	}
}


GlobalVarsIterator := class extend BoxMetaObj 
{
	IsMetaIteratable := virtual !() -> bool { return true }

	globs := List.{Tuple.{Str,BoxExeObj^}}
	metaInited := bool
	MetaInit := !() -> void
	{
		GParsedAllFiles.Await()	
		if metaInited
			return void
		metaInited = true

		for spc : CodeSpaces
		{
			for glbBlock, glbName : spc.Globals
			{
				for glb : glbBlock
				{
					if glb is in GlobalVar2
					{
						asGlb := glb->{GlobalVar2^}
						if not asGlb.isThreadLocal and asGlb.parsed
						{
							globs.Emplace(glbName,asGlb.proxy&)
						}
					}
				}
			}
		}
	}

	MetaIteretableSize := virtual !() -> int 
	{
		MetaInit()
		return globs.Size()
	}

	GetMetaIterValue := virtual !(int ind) -> BoxUnit^ { return globs[ind].1 }

	GetMetaIterIndex := virtual !(int ind) -> BoxExeObj^ { return GetExeString(globs[ind].0.GetString()) }

	WriteMC := virtual !(MCBuildContext^ ctx) -> WriteMCResult
	{
		//TODO add something,
		//right now empty is fine
	}
}
