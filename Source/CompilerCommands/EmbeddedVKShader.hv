TryEmbeddVKShader := !(Token^ itm) -> BoxExeObj^
{
	if itm.Down.Right == null or itm.Down.Right.GetValue() != "()"
	{
		itm.EmitError("usage #EmbVKShader(name)")
	}
	skb := itm.Down.Right
	if skb.Down == null or not (skb.Down is TokenString)
	{
		itm.EmitError("usage #EmbVKShader(name)")
	}

	isLocal := itm.Down->{TokenIndent^}.Value == "#EmbVKShaderLocal"
	fileName := skb.Down->{TokenString^}.Value

	compressFile := false
	if skb.Down.Right?.GetValue() == "," and skb.Down.Right.Right? is TokenBool
	{
		ind := skb.Down.Right.Right->{TokenBool^}

		if ind.boolValue
		{
			compressFile = true
		}
	}
	
	itFile := File^

	if isLocal
	{
		itFile = itm.Line.File.file.GetFile(fileName)
	}else{
		itFile = FSGetFile(fileName) //todo exceptions?
	}

	if itFile == null
		itm.EmitError("File not found")
	
	if shaderCompiler == null
	{
		shaderCompiler = new ShaderCompiler()
		if CFile != null
			shaderCompiler.SetCacheFile(CFile)
	}
	
	return CreateEmbeddedObj(StringSpan("EmbVKShader"),itFile,StringSpan("test")
	, compressFile ?: "Deflate" : "None"
	,() ==> Blob^ {
		return shaderCompiler.Compile(itFile)
	})
}

shaderCompiler := ShaderCompiler^
