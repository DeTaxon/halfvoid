TryEmbedFile := !(Token^ itm) -> BoxExeObj^
{
	if itm.Down.Right == null or itm.Down.Right.GetValue() != "()"
	{
		itm.EmitError("usage #File(name[,compress])")
	}
	skb := itm.Down.Right
	if skb.Down == null or not (skb.Down is TokenString)
	{
		itm.EmitError("usage #File(name[,compress])")
	}

	isLocal := itm.Down->{TokenIndent^}.Value == "#FileLocal"
	 
	fileName := skb.Down->{TokenString^}.Value

	compressFile := false
	if skb.Down.Right?.GetValue() == "," and skb.Down.Right.Right? is TokenBool
	{
		ind := skb.Down.Right.Right->{TokenBool^}

		if ind.boolValue
		{
			compressFile = true
		}
	}

	
	itFile := File^

	if isLocal
	{
		itFile = itm.Line.File.file.GetFile(fileName)
	}else{
		itFile = FSGetFile(fileName) //todo exceptions?
	}

	if itFile == null
		itm.EmitError("File not found")

	return CreateEmbeddedObj(StringSpan("EmbeddedFile"),itFile,itFile.GetName()^[0..0]
	, compressFile ?: "Deflate" : "None"
	,() ==> Blob^ {
		return itFile.GetBlob()
	})
}

blobDatas := List.{BoxRawData^}

BoxRawData := class extend BoxExeObj
{
	ItBlob := Blob^
	ItId := int

	this := !(Blob^ setBlob) -> void
	{
		ItId = GetNewId()

		ItBlob = setBlob

		ObjType = GTypeVoidP
	}
	PrintGlobal := virtual !(LLVMWriteContext^ ctx) -> void
	{
		f := ctx.writeStream
		ValueSize := ItBlob.Size()
		Value := ItBlob.GetPointer()->{u8^}

		f^ << "@File" << ItId << " = global [" << ValueSize << " x i8] ["
		for i : ValueSize
		{
			if i != 0
				f^ << ","
			f^ << "i8 " << Value[i]->{int}
		}
		f^ << "]\n"
	}
	PrintPre := virtual !(LLVMWriteContext^ ctx) -> void
	{
	}
	PrintUse := virtual !(LLVMWriteContext^ ctx) -> void
	{
		ValueSize := ItBlob.Size()
		ctx.writeStream^ << "getelementptr inbounds ([" << ValueSize << " x i8] , [ " << ValueSize << " x i8]* @File" << ItId <<" , i32 0, i32 0)"
	}

	GetSize := !() -> int
	{
		return ItBlob.Size()
	}
}

EmbFile := class
{
	itFile := File^
	isCompressed := bool
	fileSize := int
	compressedSize := int
	data := BoxRawData^

	this := !(File^ inFile, bool compressFile) -> void
	{
		itFile = inFile

		fileBlob := inFile.GetBlob()

		fileSize = fileBlob.Size()
		compressedSize = fileBlob.Size()

		if compressFile
		{
			newBlob := CompressBlobDeflate(fileBlob)
			if newBlob != null
			{
				isCompressed = true
				fileBlob = newBlob
				compressedSize = fileBlob.Size()
			}
		}
		data = new BoxRawData(fileBlob)
	}
	GetSize := !() -> int 
	{
		return data.GetSize()
	}
	PrintGlobal := !(LLVMWriteContext^ ctx) -> void
	{
		data.PrintGlobal(ctx)
	}
}

