BuiltInTemplateReconstructClass := class extend BoxTemplate
{
	this := !() -> void
	{
		FuncName = "ReconstructClass"


		minTyp := Type^()

		IsRefs := true
		MyFuncType = GetFuncType(minTyp&,IsRefs&,1,GTypeVoid,false,false,false)
	}
	GetNewFunc := virtual  !(FuncInputBox itBox, TypeFunc^ fun) -> BoxFunc^
	{
		typName := itBox.itPars[0].first.GetName()
		resStr := ""sbt
		if itBox.itPars[0].first is TypeClass
		{
			clId := itBox.itPars[0].first->{TypeClass^}.ToClass.ClassId
			resStr << "call void @ClassExtraConstructor" << clId << "(" << typName << "* #1)\n"
		}
		return new BuiltInFuncUno("ReconstructClass",itBox.itPars[0].first,true,GTypeVoid,false,resStr)
	}
	GetPriority := virtual !(FuncInputBox itBox) -> int
	{
		if itBox.itPars.Size() != 1
			return 255
		if not itBox.itPars[0].second
			return 255
		if not (itBox.itPars[0].first is TypeClass)
			return 255
		return 0
	}
}
