
FieldParam := class extend MemParam
{
	ItName := string
	ToMerge := BoxClass^

	this := !(string Name,Type^ typ, BoxClass^ pp) -> void
	{
		ResultType = typ
		ItName = StrCopy(Name)
		ToMerge = pp
		pp.Params.Push(this&)
	}
	IsRef := virtual !() -> bool
	{
		return true
	}
	PrintUse := virtual !(TIOStream f, int newInd,int debId) -> void
	{
		ResultType.PrintType(f)
		f << " %" << ItName
	}
	GetName := virtual !(int newInd) -> string
	{
		return "%"sbt + ItName
	}
}
FakeFieldParam := class extend MemParam
{
	ItName := string
	ToMerge := BoxClass^
	Atter := Object^
	this := !(string Name,Type^ typ, BoxClass^ pp,Object^ att) -> void
	{
		ResultType = typ
		ItName = Name
		ToMerge = pp
		Atter = att
		pp.FakeParams.Push(this&)
	}
	IsRef := virtual !() -> bool
	{
		return true
	}
	PrintUse := virtual !(TIOStream f, int newInd) -> void
	{
		ResultType.PrintType(f)
		f << " %" << ItName
	}
	GetName := virtual !(int newInd) -> string
	{
		return "%"sbt + ItName
	}
}
