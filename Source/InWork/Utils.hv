CollectConsts := !(Object^ obj , FuncInputBox^ itBox) -> void
{
	for H : obj.Down
	{
		if H.GetValue() != ","
		{
			if H.IsConst
			{
				itBox.itConsts.Push(H)
			}else{
				tp := ParseType(H)
				if tp == null
				{
					ErrorLog.Push("can not parse type in .{}\n")
				}else{
					constType := new ObjType(tp)
					itBox.itConsts.Push(constType)
				}
			}
		}
	}
}


PrintMemClear := !(TIOStream f,int ItId, char^ ptrName, char^ sizeName) -> void
{
	if jitMode
	{
		f << "%FuncPtr" << ItId << " = inttoptr i64 " << memset->{void^}->{size_t} <<" to void(i8*,i8,i64)*\n"
		f << "call void %FuncPtr" << ItId			
		f <<"(i8* " << ptrName << ",i8 0, i64 " << sizeName << ")" //TODO un64
	}else{
		f << "call void @llvm.memset.p0i8.i64(i8* " << ptrName << ",i8 0, i64 " << sizeName << ", i1 1)" //TODO un64
	}
	//f << "call void @memset(i8* %AllocAsVoid" << ItId << ",i8 0, i64 %AllocSize" << ItId << ")" //TODO un64
	//f << "call void @internalGCMemClear(i8* %AllocAsVoid" << ItId << ", i64 %AllocSize" << ItId << ")" //TODO un64
}