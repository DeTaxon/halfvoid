
BoxFuncDeclare := class  extend BoxFunc
{
	this := !(Object^ inPars, Object^ inOutType, string SomeName) -> void
	{
		OutputName = StrCopy(SomeName)
		FuncName = OutputName

		if not ParseParams(inPars,inOutType,false)
			inOutType.EmitError("can not parse function\n")

		OutputName = GetFuncMangledName(FuncName,null)
	}
	this := !(TypeFunc^ fT, string SomeName) -> void
	{
		FuncName = SomeName
		OutputName = SomeName
		MyFuncType = fT
	}
	PrintGlobal := virtual !(TIOStream f) -> void
	{
		f << "declare "
		MyFuncType.RetType.PrintType(f)
		f << " @" << OutputName
		MyFuncType.PrintSkobs(f)
		f << "\n"
	}

	DoTheWork := virtual !(int pri) -> void
	{
		//empty is ok
	}
}

