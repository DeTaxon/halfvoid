BoxFuncBodyStr := class extend BoxFuncBody
{
	funcIsComplete := bool
	this := !(Str setName,TypeFunc^ fncType) -> void
	{
		Name = setName
		SetType(fncType)
		readyState.Emit()
		ResultTypeHatch.Emit()
		ExitLabel = new BoxLabel()

		if DebugMode
		{
			funcLine = new BoxExeLine()
			newToken := new TokenData
			newToken.Line = new FileLine
			newToken.Line.File = GetAnyFile()
			newToken.Line.Line = 1
			funcLine.ItToken = newToken
		}
	}

	ParseString := !(StringSpan strData) -> void
	{
		fl := GetAnyFile()

		tkns := GetObjectsFromMemory(fl,strData.NonNullStr(),strData.Size())

		bdy = new TokenSymbol(StringSpan("{}"),1)
		bdy.Line = new FileLine(fl)
		bdy.Line.Line = 0
		bdy.Down = tkns

		itr := tkns
		while itr != null
		{
			itr.Up = bdy
			itr = itr.Right
		}
		ParseBodyForced()
		funcIsComplete = true
	}
	ParseBody := virtual !() -> void {}
	IsComplete := virtual !() -> bool { return funcIsComplete }
}
