BoxUnit := class extend HV_Object
{
	UnitName := virtual poison #ThisClass()->TypeName

	Work := virtual !() -> void
	{
	}
	PrintCode := virtual !(LLVMWriteContext^ ctx) -> void
	{
	}
	NotifyMemUse := virtual !() -> void
	{
	}
	PrintDebugMeta := virtual !(LLVMWriteContext^ ctx) -> void
	{
	}


	GetFileScope := virtual !() -> BoxFile^
	{
		iter := GetParentScope()

		while iter != null
		{
			if iter is in BoxFile
				return iter->{BoxFile^}
			iter = iter.GetParentScope()
		}
		return GetAnyFile()
	}

	GetParentScope := virtual !() -> BoxUnit^
	{
		return null
	}
	ScopePutConstants := !() -> void
	{
		next := GetParentScope()
		if next != null
			next.ScopePutConstants()
		PutItConstants()
	}
	PutItConstants := virtual !() -> void
	{
	}

	PrintDebugPostFuncMeta := virtual !(LLVMWriteContext^ ctx) -> void {}

	GetQLabel := virtual !() -> BoxLabel^ { return null}

	IsExecutable := virtual false
	Execute := virtual !(BoxExeObj^[] objs) -> BoxExeObj^
	{
		assert(false)
	}

}
