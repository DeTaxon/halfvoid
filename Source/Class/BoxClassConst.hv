ClassConstValue := class extend BoxExeConstObj
{
	ItType := Type^
	Value := List.{BoxExeConstObj^}

	PrintConst := virtual !(LLVMWriteContext^ ctx) -> void
	{
		f := ctx.writeStream

		f^ << "{"
		for it,i : Value
		{
			if i > 0
				f^ << ","
			typ := it.GetType()
			assert(typ != null)
			typ2 := NormalizeType(typ)

			typ2.PrintType(ctx)
			f^ << " "
			it.PrintConst(ctx)
		}
		f^ << "}"
	}
}

ClassArray := class extend BoxExeConstObj
{
	Value := List.{BoxExeConstObj^}

	this := !(Type^ tp) -> void
	{
		ObjType = tp
	}
	PrintConst := virtual !(LLVMWriteContext^ ctx) -> void
	{
		typ2 := NormalizeType(ObjType.Base)
		f := ctx.writeStream

		f^ << "["
		for it,i : Value
		{
			if i > 0
				f^ << ","

			typ2.PrintType(ctx)
			f^ << " "
			it.PrintConst(ctx)
		}
		f^ << "]"
	}
}

ConstFuncPtr := class extend BoxExeConstObj
{
	Func := BoxFunc^
	this := !(BoxFunc^ fnc) -> void
	{
		ObjType = fnc.GetType().GetPoint()
		Func = fnc
	}
	PrintConst := virtual !(LLVMWriteContext^ ctx) -> void
	{
		if Func.IsComplete()
		{
			Func.PrintName(ctx)
		}else{
			ctx.writeStream^ << "null"
		}
	}
}

ClassVTablePtrConst := class extend BoxExeConstObj
{

	itClass := BoxClass^
	this := !(BoxClassBody^ cls) -> void
	{
		itClass = cls
		ObjType = cls.VTableType.ItType.GetPoint()
	}
	PrintConst := virtual !(LLVMWriteContext^ ctx) -> void
	{
		itClass.VTableValue.PrintOutputName(ctx)
	}
}

ZeroClassConst := class extend BoxExeConstObj
{
	this := !(Type^ tp) -> void
	{
		ObjType = tp
	}
	PrintConst := virtual !(LLVMWriteContext^ ctx) -> void
	{
		ctx.writeStream^ << "zeroinitializer"
	}
}
