AutoCastCheckIfState := !(BoxExeObj^ ifCheck,List.{BoxExeObj^} onTrueVars,List.{BoxExeObj^} onFalseVars) -> void
{
	
	if ifCheck is not BoxFuncCall
		return void
	fncCall := ifCheck->{BoxFuncCall^}

	sendToTrue := true

	baseFunc := fncCall.callObj
	if baseFunc is BuiltInBoolNot
	{
		sendToTrue = false
		fncCall = fncCall.downs[0]->{BoxFuncCall^}
		if fncCall is not BoxFuncCall
			return void
		baseFunc = fncCall->{BoxFuncCall^}.callObj
	}


	if baseFunc is not in BoxFuncBody
		return void

	asFunc := baseFunc->{BoxFuncBody^}
	
	autoCastStr := GetConstString("#AddAutoCast")
	if not asFunc.Properties.Contain(autoCastStr)
		return void

	ptr := asFunc.Properties[autoCastStr]
	if ptr is not AutoCastPropertie
		return void

	assert(asFunc.Attrs.IsMethod) //TODO
	assert(fncCall.downs.Size() != 0) //TODO

	firstObject := fncCall.downs[0]

	if firstObject is PtrToRef
		firstObject = firstObject->{PtrToRef^}.Down

	if firstObject is not LocalVarProxy
		return void
	
	locVar := firstObject->{LocalVarProxy^}.baseVar
	varCall := locVar.CreateVarCall()
	fncExchange := ptr->{AutoCastPropertie^}.ExchangeFunction
	changedCall := fncExchange.CreateCall(![varCall])

	newVar := ToLocalVar(changedCall,locVar.itName)
	newVar.AutoCastedFrom = locVar

	if sendToTrue
	{
		onTrueVars.Push(newVar)
	}else{
		onFalseVars.Push(newVar)
	}
}
