AutoCastCheckIfState := !(BoxExeObj^ ifCheck,List.{BoxExeObj^} onTrueVars,List.{BoxExeObj^} onFalseVars) -> void
{
	if ifCheck is IsSameTypeChecker
	{
		checkObj := ifCheck->{IsSameTypeChecker^}
		checkObj2 := ifCheck->{IsSameTypeChecker^}.DownObj

		if checkObj2 is in LocalVarProxy
		{
			objIsRef := false
			oldVar := checkObj2->{LocalVarProxy^}.baseVar
			resObj := BoxExeObj^

			objIsRef = oldVar.isReference

			targType := checkObj.TargetType.GetPoint()

			if objIsRef and checkObj2.GetType() is in TypePoint
			{
				targType = targType.GetPoint()
			}

			makeRef := false
			preChange := oldVar.CreateVarBaseCall()->{BoxExeObj^}

			if oldVar.CreateVarBaseCall().GetType() is in TypeClass
			{
				makeRef = true
				oldVar.NotifyMemUse()
				preChange = new UnrefFuncCall(preChange)
			}

			resObj = new PtrExchange(preChange,targType)
			if objIsRef or makeRef
			{
				resObj = new PtrToRef(resObj)
			}
			newVar := ToLocalVar(resObj,oldVar.itName)
			newVar.AutoCastedFrom = oldVar
			onTrueVars.Push(newVar)
			return void
		}
	}
	
	if ifCheck is BoxFuncCall and ifCheck->{BoxFuncCall^}.callObj is BuiltInBoolNot
	{
		return AutoCastCheckIfState(ifCheck->{BoxFuncCall^}.downs[0],onFalseVars,onTrueVars)
	}

	if ifCheck is not BoxFuncCall
		return void
	fncCall := ifCheck->{BoxFuncCall^}

	baseFunc := fncCall.callObj


	if baseFunc is not in BoxFuncBody
		return void

	asFunc := baseFunc->{BoxFuncBody^}

	if not asFunc.Properties.Contain("#AddAutoCast")
		return void
	
	ptr := asFunc.Properties["#AddAutoCast"]
	if ptr is not AutoCastPropertie
		return void

	assert(fncCall.downs.Size() != 0) //TODO

	firstObject := fncCall.downs[0]

	if firstObject is PtrToRefAuto
		firstObject = firstObject->{PtrToRef^}.Down

	if firstObject is not LocalVarProxy
		return void
	

	locVar := firstObject->{LocalVarProxy^}.baseVar
	varCall := locVar.CreateVarCall()
	fncExchange := ptr->{AutoCastPropertie^}.ExchangeFunction
	changedCall := fncExchange.CreateCall(![varCall])

	newVar := ToLocalVar(changedCall,locVar.itName)
	newVar.AutoCastedFrom = locVar

	onTrueVars.Push(newVar)
}

CreateSwapVar := !(BoxExeObj^ checkObj2, Type^ newType) -> BoxExeObj^
{
	if checkObj2 is not in LocalVarProxy
		return null

	objIsRef := false
	oldVar := checkObj2->{LocalVarProxy^}.baseVar
	resObj := BoxExeObj^

	objIsRef = oldVar.isReference

	assert(not objIsRef)

	makeRef := false
	preChange := oldVar.CreateVarBaseCall()->{BoxExeObj^}

	if true//oldVar.CreateVarBaseCall().GetType() is in TypeClass
	{
		makeRef = true
		oldVar.NotifyMemUse()
		preChange = new UnrefFuncCall(preChange)

	}

	resObj = new PtrExchange(preChange,newType.GetPoint())
	if objIsRef or makeRef
	{
		resObj = new PtrToRef(resObj)
	}
	newVar := ToLocalVar(resObj,oldVar.itName)
	newVar.AutoCastedFrom = oldVar

	return newVar
}
