AutoCastCheckIfState := !(BoxExeObj^ ifCheck,List.{BoxExeObj^} onTrueVars,List.{BoxExeObj^} onFalseVars, bool inSwitchIs = false) -> void
{
	if not UseExtra and not inSwitchIs
		return void

	if ifCheck is IsSameTypeChecker
	{
		objIsRef := false
		checkObj := ifCheck->{IsSameTypeChecker^}

		checkObj2 := ifCheck->{IsSameTypeChecker^}.DownObj
		if checkObj2 is PtrToRef
		{
			checkObj2 = checkObj2->{PtrToRef^}.Down
			objIsRef = true
		}
		if checkObj2 is LocalVarProxy
		{
			oldVar := checkObj2->{LocalVarProxy^}.baseVar
			resObj := BoxExeObj^
			resObj = new PtrExchange(checkObj->{IsSameTypeChecker^}.DownObj,checkObj->{IsSameTypeChecker^}.TargetType.GetPoint())
			if objIsRef
			{
				resObj = new PtrToRef(resObj)
			}
			newVar := ToLocalVar(resObj,oldVar.itName)
			newVar.AutoCastedFrom = oldVar
			onTrueVars.Push(newVar)
			return void
		}
	}
	if not UseExtra
		return void
	
	if ifCheck is BoxFuncCall and ifCheck->{BoxFuncCall^}.callObj is BuiltInBoolNot
	{
		return AutoCastCheckIfState(ifCheck->{BoxFuncCall^}.downs[0],onFalseVars,onTrueVars)
	}

	if ifCheck is not BoxFuncCall
		return void
	fncCall := ifCheck->{BoxFuncCall^}

	baseFunc := fncCall.callObj


	if baseFunc is not in BoxFuncBody
		return void

	asFunc := baseFunc->{BoxFuncBody^}

	if asFunc.TemplateParent == TemplateInternalIsInSameType
	{
		//TODO delete this after release

		oldCall := fncCall.downs[0]
		if oldCall is PtrToRef
			oldCall = oldCall->{PtrToRef^}.Down
		if oldCall is LocalVarProxy
		{
			oldVar := oldCall->{LocalVarProxy^}.baseVar
			
			resType := Type^
			for it : asFunc.ConstVars
			{
				if it is not TypeVar
					continue
				tv := it->{TypeVar^}
				if tv.Name == "Cls"
				{
					resType = tv.Value
				}
			}
			if resType != null
			{
				newVar := ToLocalVar(new PtrExchange(fncCall.downs[0],resType.GetPoint()),oldVar.itName)
				newVar.AutoCastedFrom = oldVar
				onTrueVars.Push(newVar)
				return void
			}
		}
	}
	
	autoCastStr := GetConstString("#AddAutoCast")
	if not asFunc.Properties.Contain(autoCastStr)
		return void

	ptr := asFunc.Properties[autoCastStr]
	if ptr is not AutoCastPropertie
		return void

	assert(asFunc.Attrs.IsMethod) //TODO
	assert(fncCall.downs.Size() != 0) //TODO

	firstObject := fncCall.downs[0]

	if firstObject is PtrToRef
		firstObject = firstObject->{PtrToRef^}.Down

	if firstObject is not LocalVarProxy
		return void
	
	locVar := firstObject->{LocalVarProxy^}.baseVar
	varCall := locVar.CreateVarCall()
	fncExchange := ptr->{AutoCastPropertie^}.ExchangeFunction
	changedCall := fncExchange.CreateCall(![varCall])

	newVar := ToLocalVar(changedCall,locVar.itName)
	newVar.AutoCastedFrom = locVar

	onTrueVars.Push(newVar)
}
