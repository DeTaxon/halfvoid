AutoCastCheckIfState := !(BoxExeObj^ ifCheck,List.{BoxExeObj^} onTrueVars,List.{BoxExeObj^} onFalseVars, bool inSwitchIs = false) -> void
{
	if not UseExtra and not inSwitchIs
		return void

	if ifCheck is IsSameTypeChecker
	{
		checkObj := ifCheck->{IsSameTypeChecker^}
		checkObj2 := ifCheck->{IsSameTypeChecker^}.DownObj

		if checkObj2 is LocalVarProxyOut
		{
			objIsRef := false
			oldVar := checkObj2->{LocalVarProxyOut^}.baseVar
			resObj := BoxExeObj^

			objIsRef = oldVar.isReference


			resObj = new PtrExchange(checkObj->{IsSameTypeChecker^}.DownObj,checkObj->{IsSameTypeChecker^}.TargetType.GetPoint())
			if objIsRef
			{
				resObj = new PtrToRef(resObj)
			}
			newVar := ToLocalVar(resObj,oldVar.itName)
			newVar.AutoCastedFrom = oldVar
			onTrueVars.Push(newVar)
			return void
		}
	}
	if not UseExtra
		return void
	
	if ifCheck is BoxFuncCall and ifCheck->{BoxFuncCall^}.callObj is BuiltInBoolNot
	{
		return AutoCastCheckIfState(ifCheck->{BoxFuncCall^}.downs[0],onFalseVars,onTrueVars)
	}

	if ifCheck is not BoxFuncCall
		return void
	fncCall := ifCheck->{BoxFuncCall^}

	baseFunc := fncCall.callObj


	if baseFunc is not in BoxFuncBody
		return void

	asFunc := baseFunc->{BoxFuncBody^}

	if not asFunc.Properties.Contain("#AddAutoCast")
		return void
	
	ptr := asFunc.Properties["#AddAutoCast"]
	if ptr is not AutoCastPropertie
		return void

	assert(fncCall.downs.Size() != 0) //TODO

	firstObject := fncCall.downs[0]

	if firstObject is PtrToRefAuto
		firstObject = firstObject->{PtrToRef^}.Down

	if firstObject is not LocalVarProxy
		return void
	

	locVar := firstObject->{LocalVarProxy^}.baseVar
	varCall := locVar.CreateVarCall()
	fncExchange := ptr->{AutoCastPropertie^}.ExchangeFunction
	changedCall := fncExchange.CreateCall(![varCall])

	newVar := ToLocalVar(changedCall,locVar.itName)
	newVar.AutoCastedFrom = locVar

	onTrueVars.Push(newVar)
}
