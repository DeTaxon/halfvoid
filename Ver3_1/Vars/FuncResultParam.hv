FuncResultParam := class extend ParamFunc
{
	CreatedVarCalls := List.{ParamLoadObj^}

	this := !(Type^ tp,bool isRef2) -> void
	{
		assert(CurrentFunc != null)
		parentFunc = CurrentFunc
		SetType(GetFuncType(0,null,null,tp,isRef2,false))
	}
	this := !(BoxExeObj^ obj) -> void
	{
		exeObj = obj
		this."FuncResultParam.this"(obj.GetType(),obj.IsMem())
	}
	IsMem := virtual !() -> bool
	{
		return GetType()->{TypeFunc^}.ResultRef
	}
	PrintCode := virtual !(TIOStream^ f) -> void
	{
		exeObj.PrintDefaultUse(f)
	}
	PrintResultObj := virtual !(TIOStream^ f, int resId, int debId) -> void
	{
		if exeObj.IsMem()
		{
			exeObj.PrintPointUse(f)
		}else{
			exeObj.PrintUse(f)
		}
	}
	PrintFuncCall := virtual !(TIOStream^ f,int resId,int debId,ExeDownList lst) -> void
	{
	}

	PopulateCalls := virtual !() -> void
	{
	}
	CreateCall := virtual !(CheckExeDownList objs) -> BoxExeObj^
	{
		return new BoxFuncCall(this&,objs)
		//res := new ParamLoadObj(this&)
		//CreatedVarCalls.Push(res)
		//return res
	}
	//PopulateCalls := virtual !() -> void
	//{
	//	for it : CreatedVarCalls
	//	{
	//		it.CallObj = new BoxFuncCall(this&)
	//	}
	//}
}

FuncResultParamInGenerator := class extend FuncResultParam //TODO non ref
{
	PrintCode := virtual !(TIOStream^ f) -> void
	{
	}
	PrintAtStart := virtual !(TIOStream^ f) -> void
	{
		exeObj.PrintDefaultUse(f)
	}

	CreateCall := virtual !(CheckExeDownList objs) -> BoxExeObj^
	{
		return new BoxFuncCall(this&,objs)
		//res := new ParamLoadObj(this&)
		//CreatedVarCalls.Push(res)
		//return res
	}
	//PopulateCalls := virtual !() -> void
	//{
	//	return new BoxFuncCall(this&)
	//}
}
